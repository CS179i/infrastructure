{
  "rules": {
    ".read": "auth != null",
    ".write": "auth != null",
    "users": {
      "$uid": {
        ".read": "auth.uid === $uid",
        ".write": "auth.uid === $uid",
        "name": {
          ".validate": "newData.isString()"
        },
        "company": {
          ".validate": "newData.isString()"
        },
        "events": {
          ".validate": "root.child('events/' + newData.val()).exists()"
        },
        "connections": {
          "$otherUser": {
            ".validate": "root.child('users/' + $otherUser).exists()"
          }
        },
        "managed_events": {
          ".validate": "root.child('events/' + newData.val()).exists()"
        }
      }
    },
    "events": {
      "$event": {
        ".read": "auth != null",
        ".write": "auth.uid === newData.child('manager').val()",
        "manager": {
          ".validate": "root.child('users/' + newData.val()).exists()"
        },
        "expires": {
          ".validate": "newData.val() > now"
        },
        "questionnaire": {
          ".validate": "root.child('questionnaires/' + newData.val()).exists()"
        },
        "users": {
          "$uid": {
            ".validate": "root.child('users/' + $uid).exists() && newData.isNumber()",
            ".write": "auth != null"
          }
        }
      }
    },
    "questionnaires": {
      ".read": "auth != null",
      ".write": false,
      "$questionnaire": {
        "$question": {
          "content": {
            ".validate": "newData.isString()"
          },
          "possible_responses": {
            "$response":{
              ".validate": "newData.isString()"
            }
          }
        }
      }
    }
  }
}
